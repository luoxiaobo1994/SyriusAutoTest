syntax = "proto3";

import "com/syriusrobotics/ota/client/common.proto";

package com.syriusrobotics.cornerstone.ota;
option java_multiple_files = true;
option java_outer_classname = "OtaV2Proto";

service OtaV2 {

  // fetch ota task v2 from ota-server, return artifact metadata
  rpc fetchOtaTaskV2(FetchOtaTaskV2Request) returns (FetchOtaTaskV2Response) {}

  // report ota result when ota has been finished
  rpc reportOtaTaskResultV2(ReportOtaTaskResultV2Request) returns (CommonResponse) {}

  rpc registerClientV2(RegisterClientV2Request) returns (CommonResponse) {}
}


message FetchOtaTaskV2Request {

  string otaClientId = 1;

  // current valid package values:
  // com.syriusrobotics.movebase.bronto
  // com.syriusrobotics.movebase.diplo
  // com.syriusrobotics.gogoready
  // com.syriusrobotics.applet.speedpicker
  // com.syriusrobotics.applet.ponnyrunner
  // com.syriusrobotics.applet.goodskeeper

  // filter package
  repeated string packages = 2;

  uint64 timestamp = 3;

}

message FetchOtaTaskV2Response {

  string otaClientId = 1;

  repeated Manifest manifests = 2;

  uint64 timestamp = 3;

  message Manifest {

    int32 order = 1;

    Artifact artifact = 2;

    map<string, string> preference = 3;

    string taskId = 4;

    message Artifact {

      // current valid values:
      // com.syriusrobotics.movebase.bronto
      // com.syriusrobotics.movebase.diplo
      // com.syriusrobotics.gogoready
      // com.syriusrobotics.applet.speedpicker
      // com.syriusrobotics.applet.ponnyrunner
      // com.syriusrobotics.applet.goodskeeper
      string package = 1;

      string version = 2;

      uint64 releaseTime = 3;

      string releaseNotes = 4;

      string checksum = 5;

      string absolutePath = 6;

      map<string, string> attributes = 7;

    }

  }

}




message ReportOtaTaskResultV2Request {
  TaskStatus status = 1;

  enum TaskStatus{
    CREATED = 0;
    SUCCESS = 1;
    FAILURE = 2;
    CLOSED = 3;
  }

  string otaClientId = 2;

  string remark = 3;

  string taskId = 4;

}

message RegisterClientV2Request {

  string otaClientId = 1;

  string status = 2;

  uint64 timestamp = 3;

  repeated ClientTag tags = 4;

  message ClientTag {
    string key = 1;
    string value = 2;
  }
}
