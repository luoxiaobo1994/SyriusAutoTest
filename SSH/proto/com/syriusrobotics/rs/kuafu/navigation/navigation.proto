syntax = "proto3";

package com.syriusrobotics.rs.kuafu.navigation;

import "com/syriusrobotics/rs/kuafu/common.proto";

option java_multiple_files = true;
option java_outer_classname = "NavigationProto";

service Navigation {
  rpc init(Empty) returns (CommonResponse) {}
  rpc listenPose(Empty) returns (stream Pose) {}
  rpc createMoveTask(MoveTaskRequest) returns (stream MoveTaskResponse) {}
  rpc pauseMoveTask(Empty) returns (CommonResponse) {}
  rpc resumeMoveTask(Empty) returns (CommonResponse) {}
  rpc deprApplyMap(ApplyMapRequest) returns (CommonResponse) {}
  rpc setAccessoryShape(AccessoryShapeRequest) returns (CommonResponse) {}

  // multiLayer navigation
  rpc switchMapLayer (SwitchLayerRequest) returns (CommonResponse) {}
  rpc setAdviceLayeredPose (LayeredPoseRequest) returns (CommonResponse) {}
  rpc listenLayeredPose(Empty) returns (stream LayeredPose) {}
}

message SwitchLayerRequest{
  int64 timestamp = 1;
  string mapLayerName = 2;
}

message LayeredPoseRequest{
  int64 timestamp = 1;
  string mapLayerName = 2;
  LabelPose pose = 3;
}

message LayeredPose{
  int64 timestamp = 1;
  string mapLayerName = 2;
  Pose pose = 3;
}

message ApplyMapRequest { string path = 1;
  string md5 = 2;
}

message Pose {
  int64 timestamp = 1; // utc, milliseconds.
  float x = 2;
  float y = 3;
  float theta = 4;
}

message AccessoryShapeRequest {
  int64 timestamp = 1; // utc, milliseconds.
  string shape = 2;
}

message MoveTaskPose {
  int64 timestamp = 1; // utc, milliseconds.
  string label = 2;
  float x = 3;
  float y = 4;
  float theta = 5;
}

message LabelPose {
  int64 timestamp = 1; // utc, milliseconds.
  string label = 2;
  float x = 3;
  float y = 4;
  float theta = 5;
}

message MoveTaskRequest {
  int64 timestamp = 1; // utc, milliseconds.
  string taskId = 2;
  MoveTaskPose destination = 3;
  repeated MoveTaskPose suggestedRoute = 4;
}

message MoveTaskResponse {
  int64 timestamp = 1; // utc, milliseconds.
  string taskId = 2;
  MoveTaskPose destination = 3;
  repeated MoveTaskPose suggestedRoute = 4;
  MoveTaskPose actual = 5;
  repeated MoveTaskPose actualRoute = 6;
  Status status = 7;
  enum Status {
    MOVING = 0;
    SUCCEEDED = 1;
    FAILED = 2;
    ACCEPTED = 3;
    NOT_ACCEPTABLE = 4;
  }
  string msg = 8;
}
